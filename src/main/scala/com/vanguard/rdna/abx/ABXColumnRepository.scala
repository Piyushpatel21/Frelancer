package com.vanguard.rdna.abx

import com.vanguard.rdas.rc.spark.ColumnRepository
import org.apache.spark.sql.types._

object ABXColumnRepository extends ColumnRepository(
  acctId -> (DecimalType(15, 0), "Vanguard internal account identifier"),
  brokerageAccountNumber -> (StringType, "Brokerage account number. TA account has no brokerage account number."),
  servId -> (IntegerType, "Service identifier"),
  sagId -> (DecimalType(15, 0), "Service agreement identifier"),
  accountType -> (StringType, "Account type. Example values: TA, VBA, VBO, VBS"),
  rgstrnTypCode -> (StringType, "Registration type code"),
  rtrmtPlnTypCode -> (StringType, "Denotes the retirement account type associated with a brokerage account. Allowed values are: NON-RETIRE, 1=PARTICIPANT, 2=SPOUSAL, 3=ROLLOVER, 4=INHERITANCE, 5=EMPLOYEE, 6=OMNIBUS, 7=GUARDIAN"),
  accountEstabDate -> (TimestampType, "The date the brokerage account was opened but not necessarily funded."),
  sagBeginDate -> (TimestampType, "Service agreement effective begin date"),
  sagEndDate -> (TimestampType, "Service agreement effective end date"),
  accountStatusCode -> (StringType, "Description pending"),
  openClosedCode -> (StringType, "OPEN or CLOSED account status"),
  altnSagId -> (DecimalType(15, 0), "Related TA sag ID for a VBS account"),
  taAcctId -> (DecimalType(15, 0), "Related TA account ID for a VBS account"),
  rpoIndicator -> (StringType, "Y/N field to indicate RPO status"),
  escheatedIndicator -> (StringType, "Y/N field to indicate escheated status"),
  eDeliveryStatements -> (StringType, "Y/N field for the statements e-delivery option"),
  eDeliveryConfirmation -> (StringType, "Y/N field for the confirmation e-delivery option"),
  eDeliveryReports -> (StringType, "Y/N field for the reports e-delivery option"),
  eDeliveryNotices -> (StringType, "Y/N field for the notices e-delivery option"),
  eDeliveryTaxForm -> (StringType, "Y/N field for the tax form e-delivery option"),
  eDeliveryProxy -> (StringType, "Y/N field for the proxy materials e-delivery option"),
  rgstrnNumberOfNameLines -> (IntegerType, "Number of name lines in the registration address lines"),
  rgstrnLine1 -> (StringType, "Name and address registration line 1"),
  rgstrnLine2 -> (StringType, "Name and address registration line 2"),
  rgstrnLine3 -> (StringType, "Name and address registration line 3"),
  rgstrnLine4 -> (StringType, "Name and address registration line 4"),
  rgstrnLine5 -> (StringType, "Name and address registration line 5"),
  rgstrnLine6 -> (StringType, "Name and address registration line 6"),
  rgstrnCityName -> (StringType, "Registration address city name"),
  rgstrnStateCode -> (StringType, "Registration address state code"),
  rgstrnZipCode -> (StringType, "Registration address zip code"),
  rgstrnZipPlus4 -> (StringType, "Registration address zip_plus_4 code"),
  rgstrnCountryCode -> (StringType, "Registration address country code"),
  rgstrnFognAddressFlag -> (StringType, "Registration address foreign address flag"),
  streetAddressLine1 -> (StringType, "Street address line 1"),
  streetAddressLine2 -> (StringType, "Street address line 2"),
  streetAddressLine3 -> (StringType, "Street address line 3"),
  streetAddressLine4 -> (StringType, "Street address line 4"),
  cityName -> (StringType, "Street address city name"),
  stateCode -> (StringType, "Street address state code"),
  zipCode -> (StringType, "Street address zip code"),
  zipPlus4 -> (StringType, "Street address zip_plus_4_code"),
  countryCode -> (StringType, "Street address country code"),
  fognAddressFlag -> (StringType, "Street address foreign address flag"),
  derivedStateCode -> (StringType, "Derived state code based on the account type, registration address and street address"),
  poId -> (LongType, "Client Person/Organization identifier"),
  clientPoid -> (LongType, "Client Person/Organization identifier"),
  lastContactTs -> (TimestampType, "Date/time of the last contact event"),
  contactType -> (StringType, "A code categorizing the type of contact made"),
  contactDescription -> (StringType, "Contact description. Meant to provide more details about the contact event"),
  lastUpdatedTs -> (TimestampType, "Date/time of the last update"),
  poRoleCode -> (StringType, "Role code"),
  firstName -> (StringType, "First name"),
  middleName -> (StringType, "Middle name"),
  lastName -> (StringType, "Last name"),
  orgName -> (StringType, "Organization name"),
  emailAddress -> (StringType, "Email address"),
  semsStatusCd -> (StringType, "Code identifying the type of Electronic address"),
  emailBounceIndicator -> (StringType, "A flag (y for yes, n for no) that indicates if emails were bounced back from the email address. Sample Value: Y for yes."),
  tinId -> (LongType, "TIN Number"),
  tinType -> (StringType, "TIN type"),
  birthDate -> (TimestampType, "The birth date associated for the given client. Sample Value: 1970-01-01"),
  isDeceased -> (StringType, "A flag (y for yes, n for no) that indicates if the client is deceased. Sample Value: Y for yes."),
  deceasedDate -> (TimestampType, "The deceased date associated with the client (if deceased). Sample Value: 1990-01-05"),
  vndrVrfDeathDate -> (TimestampType, "The date that death is verified by Vendor"),
  deathCertFileDate -> (TimestampType, "The date on the death certificate file"),
  numberOfNameLines -> (IntegerType, "Number of name lines in the address lines"),
  addressLine1 -> (StringType, "Name and address line 1"),
  addressLine2 -> (StringType, "Name and address line 2"),
  addressLine3 -> (StringType, "Name and address line 3"),
  addressLine4 -> (StringType, "Name and address line 4"),
  addressLine5 -> (StringType, "Name and address line 5"),
  addressLine6 -> (StringType, "Name and address line 6"),
  addressLine7 -> (StringType, "Name and address line 7"),
  dateContactBasic -> (TimestampType, "Timestamp of last contact type basic (phone, clam, in-person)"),
  contactBasicDescription -> (StringType, "Additional details for last contact type basic (phone, clam, in-person)"),
  dateContactWeb -> (TimestampType, "Timestamp of last contact type web"),
  contactWebDescription -> (StringType, "Additional details for last contact type web"),
  dateContactMail -> (TimestampType, "Timestamp of last contact type mail"),
  contactMailDescription -> (StringType, "Additional details for last contact type mail"),
  dateContactTransaction -> (TimestampType, "Timestamp of last contact type non recurring transaction"),
  contactTransactionDescription -> (StringType, "Additional details for last contact type non recurring transaction"),
  dateContactRecurring -> (TimestampType, "Timestamp of last contact type recurring transaction"),
  contactRecurringDescription -> (StringType, "Additional details for last contact type recurring transaction"),
  dateContactTaxform -> (TimestampType, "Timestamp of last contact type tax form (1099x, 1042s)"),
  contactTaxformDescription -> (StringType, "Additional details for last contact type tax form (1099x, 1042s)"),
  dateContactTransRelated -> (TimestampType, "Timestamp of last contact type non recurring transaction related"),
  contactTransRelatedDescription -> (StringType, "Additional details for last contact type non recurring transaction"),
  dateContactRecurringRelated -> (TimestampType, "Timestamp of last contact type recurring transaction related"),
  contactRecurringRelatedDescription -> (StringType, "Additional details for last contact type recurring transaction related"),
  dateContactTaxformRelated -> (TimestampType, "Timestamp of last contact type tax form (1099x, 1042s) related"),
  contactTaxformRelatedDescription -> (StringType, "Additional details for last contact type tax form (1099x, 1042s) related"),
  totalAccountBalance -> (DecimalType(18, 2), "Total account balance in USD"),
  fundId -> (StringType, "Fund identifier"),
  vastAcctNumber -> (StringType, "Fund VAST account number"),
  tickerSymbol -> (StringType, "Fund ticker symbol"),
  fundLongName -> (StringType, "Fund long name"),
  cusip -> (StringType, "Cusip"),
  securityNumber -> (IntegerType, "BETA assigned security number"),
  controlNumber -> (IntegerType, "BETA assigned control number"),
  issueShareQuantity -> (DecimalType(20, 8), "Represents the number of shares that a client has actual certificates for it at Vanguard for the T/A account. Not used recently. Sample Value: 50.30"),
  bookShareQuantity -> (DecimalType(20, 8), "Book shares do not have certificates and are 'held' at Vanguard (with Vanguard as the transfer agent)"),
  shareQuantity -> (DecimalType(20, 8), "Total quantity of shares for a position"),
  nav -> (DecimalType(20, 8), "Price per unit"),
  marketValue -> (DecimalType(20, 2), "share_qty * nav"),
  marketValueDate -> (TimestampType, "Timestamp of for which date the market value was calculated"),
  beneficiarySetId -> (DecimalType(15, 0), "Beneficiary set identifier"),
  beneficiaryId -> (DecimalType(15, 0), "Beneficiary identifier"),
  taxpayerIdNo -> (StringType, "Beneficiary TIN no."),
  relationshipToOwnerCode -> (StringType, "Beneficiary relationship to Owner"),
  beneficiaryTypeCode -> (StringType, "Beneficiary type code"),
  beneficiaryAllocationPercentage -> (DecimalType(6, 2), "This records the percentage of the assets to be allocated to a beneficiary. The maximum is 100.00 and must contain 2 decimal points. The total for all beneficiaries at each type must equal 100.00 from PDM model upload on 3/16/2007"),
  trustDate -> (TimestampType, "Beneficiary Trust open date"),
  beneficiaryName -> (StringType, "Beneficiary name"),
  beneficaryDesignationCode -> (StringType, "Beneficiary designation code"),
  clientOwnedFlag -> (StringType, "Flag for if an account is client owned or not"),
  lastUpdatedEDeliveryStatements -> (TimestampType, "Date/time of the last update"),
  lastUpdatedEDeliveryNotices -> (TimestampType, "Date/time of the last update"),
  lastUpdatedEDeliveryTaxForm -> (TimestampType, "Date/time of the last update"),
  lastUpdatedEDeliveryConfirmation -> (TimestampType, "Date/time of the last update"),
  lastUpdatedEDeliveryReports -> (TimestampType, "Date/time of the last update"),
  lastUpdatedEDeliveryProxy -> (TimestampType, "Date/time of the last update")

)
